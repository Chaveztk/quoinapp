{"ast":null,"code":"var _jsxFileName = \"/Users/chavezking/Desktop/Email 2/Ben/Quoin-Project-final/src/components/global-components/MailchimpForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n// import InputField from \"../ui/InputField\";\n\nconst CustomForm = _ref => {\n  let {\n    status,\n    message,\n    onValidation\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  useEffect(() => {\n    if (status === \"success\") clearFields();\n  }, [status]);\n  const clearFields = () => {\n    setEmail(\"\");\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    email.indexOf(\"@\") > -1 && onValidation({\n      EMAIL: email\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mc__form\",\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mc__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, status === \"success\" ? \"Success!\" : \"Subscribe to our weekly Newsletter and receive updates via email.\"), status === \"sending\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__alert mc__alert--sending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"sending...\"), status === \"error\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__alert mc__alert--error\",\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), status === \"success\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__alert mc__alert--success\",\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), status !== \"success\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__field-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Enter email address\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"youremail@email.com\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    label: \"subscribe\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })) : null, status === \"success\" ? /*#__PURE__*/React.createElement(\"button\", {\n    // onClick={() => setModalOpen(false)}\n    className: \"g__justify-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Close\") : /*#__PURE__*/React.createElement(\"input\", {\n    label: \"subscribe\",\n    type: \"submit\"\n    // formValues={[email, firstName, lastName]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }));\n};\nconst MailchimpForm = () => {\n  const POST_URL = \"https://quoinmanagement.us21.list-manage.com/subscribe?u=ff9ad23486fb8954700220354&id=9cb597d97c\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc__form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MailchimpSubscribe, {\n    url: POST_URL\n    // render={({ subscribe, status, message }) => (\n    //   <CustomForm\n    //     status={status}\n    //     message={message}\n    //     onValidation={(formData) => subscribe(formData)}\n    //   />\n    // )}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n};\nexport default MailchimpForm;","map":{"version":3,"names":["React","useEffect","useState","MailchimpSubscribe","CustomForm","_ref","status","message","onValidation","email","setEmail","emailValid","setEmailValid","clearFields","handleSubmit","e","preventDefault","indexOf","EMAIL","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","htmlFor","type","placeholder","onChange","target","value","label","MailchimpForm","POST_URL","url"],"sources":["/Users/chavezking/Desktop/Email 2/Ben/Quoin-Project-final/src/components/global-components/MailchimpForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n// import InputField from \"../ui/InputField\";\n\nconst CustomForm = ({ status, message, onValidation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n\n  useEffect(() => {\n    if (status === \"success\") clearFields();\n  }, [status]);\n\n  const clearFields = () => {\n    setEmail(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    email.indexOf(\"@\") > -1 && onValidation({ EMAIL: email });\n  };\n\n  return (\n    <form className=\"mc__form\" onSubmit={(e) => handleSubmit(e)}>\n      <h3 className=\"mc__title\">\n        {status === \"success\"\n          ? \"Success!\"\n          : \"Subscribe to our weekly Newsletter and receive updates via email.\"}\n      </h3>\n\n      {status === \"sending\" && (\n        <div className=\"mc__alert mc__alert--sending\">sending...</div>\n      )}\n      {status === \"error\" && (\n        <div\n          className=\"mc__alert mc__alert--error\"\n          dangerouslySetInnerHTML={{ __html: message }}\n        />\n      )}\n      {status === \"success\" && (\n        <div\n          className=\"mc__alert mc__alert--success\"\n          dangerouslySetInnerHTML={{ __html: message }}\n        />\n      )}\n\n      {status !== \"success\" ? (\n        <div className=\"mc__field-container\">\n          <div className=\"mc__email\">\n            <label htmlFor=\"email\">\n              Enter email address\n              <input\n                type=\"text\"\n                placeholder=\"youremail@email.com\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </label>\n          </div>\n\n          <input label=\"subscribe\" type=\"submit\" />\n        </div>\n      ) : null}\n\n      {status === \"success\" ? (\n        <button\n          // onClick={() => setModalOpen(false)}\n          className=\"g__justify-self-center\"\n        >\n          Close\n        </button>\n      ) : (\n        <input\n          label=\"subscribe\"\n          type=\"submit\"\n          // formValues={[email, firstName, lastName]}\n        />\n      )}\n    </form>\n  );\n};\n\nconst MailchimpForm = () => {\n  const POST_URL =\n    \"https://quoinmanagement.us21.list-manage.com/subscribe?u=ff9ad23486fb8954700220354&id=9cb597d97c\";\n\n  return (\n    <div className=\"mc__form-container\">\n      <MailchimpSubscribe\n        url={POST_URL}\n        // render={({ subscribe, status, message }) => (\n        //   <CustomForm\n        //     status={status}\n        //     message={message}\n        //     onValidation={(formData) => subscribe(formData)}\n        //   />\n        // )}\n      />\n    </div>\n  );\n};\n\nexport default MailchimpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}